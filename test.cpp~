/**==========================================
 *   This is a solution for ACM/ICPC problem
 *
 *   @author: shuangde
 *   @blog: blog.csdn.net/shuangde800
 *   @email: zengshuangde@gmail.com
 *===========================================*/
/*
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;

typedef long long int64;
const int INF = 0x3f3f3f3f;
const int MAXN = 1010;
const int64 MOD = 1000000007;


int n, ans;
int64 f[100010];

int main(){

    f[0] = 1; f[1] = 1; f[2] = 2; f[3] = 3; f[4] = 5;

    for(int i=5; i<=100000; ++i){
        f[i] = 0;
        for(int k=1; ; ++k){
            int j = i - k*(3*k-1)/2;
            if(j<0) break;
            int m;
            if(k&1) m=1;
            else m=-1;
            f[i] = f[i] + m * f[j];
            f[i] = (f[i]+MOD)%MOD;
        }

        for(int k=-1; ; --k){
            int j = i - k*(3*k-1)/2;
            if(j <0 ) break;
            int m;

            if( (-k)&1) m=1;
            else m=-1;

            f[i] = f[i] + m * f[j];
            f[i] = (f[i]+MOD)%MOD;
        }
    }
    int T;
    scanf("%d", &T);
    while(T--){
        scanf("%d", &n);
     //   printf("%d\n", f[n]);
        cout << f[n] << endl;
    }   

    cout << f[110] << endl;
    return 0;
}
*/

